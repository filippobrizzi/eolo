# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PRESET: preferred

jobs:
  docker_build_and_publish:
    runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: dorny/paths-filter@v2
          id: filter
          with:
          filters: |
            docker:
              - 'docker/**'
        - name: Build and push the image
          if: steps.filter.outputs.docker == 'true'
          run: |
            docker login --username filippobrizzi --password ${{ secrets.GH_PAT }} ghcr.io
            cd ${{github.workspace}}/docker
            ./build.sh
            source ./version.sh
            docker image tag ${IMAGE}:latest ghcr.io/filippobrizzi/${IMAGE}:latest
            docker push ghcr.io/filippobrizzi/${IMAGE}:latest
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y ninja-build

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DBUILD_MODULES=all -DCMAKE_BUILD_TYPE=Release

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -- all examples

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make check
